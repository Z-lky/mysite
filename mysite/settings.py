"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-tla!&4yyu36(b0ohjr2^=%)qr%0m#a*lb0)_)t-g6+n7b9&@1#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 添加子应用
    # 'goods.apps.GoodsConfig'
    'goods',
    'usersapp',
    'cart',
    'trend',
    'order',
    'forum',
    'evaluate',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # 修改模板路径
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'usersapp.mycontextprocessors.getUserInfo',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mysitedb',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'
#
# TIME_ZONE = 'UTC'

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# STATIC_URL = 'static/'

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
# Base directory for media files
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "redis://127.0.0.1:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",  # 配置客户端
            "CONNECTION_POOL_KWARGS": {"max_connections": 100, 'decode_responses': True},
            # 连接池 decode_responses=True:这样写存的数据是字符串格式
            # "PASSWORD": "mysecret"
        }
    },
    'session-redis': {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/5",
    },
    "verify_codes": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {"max_connections": 100, 'decode_responses': True},  # 连接池
        }
    }
}
SESSION_CACHE_ALIAS = "session-redis"
SESSION_ENGINE = "django.contrib.sessions.backends.cache"



# 邮件主机
EMAIL_HOST = 'smtp.qq.com'
# 设置端口号，25端口为SMTP（简单邮件传输协议）服务所开放的，是用于发送邮件。
# 本机25，云服务器587
EMAIL_PORT = 25
# 设置发件人邮箱
EMAIL_HOST_USER = '1106921377@qq.com'
# 设置发件人 授权码
EMAIL_HOST_PASSWORD = 'gqpbrqcaygznhehi'
# 设置是否启用安全链接
EMAIL_USER_TLS = True
# EMAIL_USER_TLS = False
# 默认电子邮箱，发送邮件时DEFAULT_FROM_EMAIL这一个设置必须写
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER







#支付宝配置
from alipay import AliPay

APPID = open(f'{BASE_DIR}/mysite/alipay_key/appid').read()
APP_PRIVATE_KEY_STRING = open(f'{BASE_DIR}/mysite/alipay_key/private_key').read()
ALIPAY_PUBLIC_KEY_STRING = open(f'{BASE_DIR}/mysite/alipay_key/public_key').read()

# 实例化
# alipay = AliPay(appid=APPID,
#                 app_notify_url=None,
#                 app_private_key_string=APP_PRIVATE_KEY_STRING,
#                 alipay_public_key_string=ALIPAY_PUBLIC_KEY_STRING,
#                 sign_type='RSA2',
#                 debug=True, )
alipay = AliPay(appid=APPID,
                app_notify_url='http://127.0.0.1:8088/order/checkPay/',
                app_private_key_string=APP_PRIVATE_KEY_STRING,
                alipay_public_key_string=ALIPAY_PUBLIC_KEY_STRING,
                sign_type='RSA2',
                debug=True, )

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',]



